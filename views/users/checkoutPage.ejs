<%- include("../layouts/user_header.ejs") %>

<head>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <style>
        /* General Styles */
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }
        .checkout-container {
            display: flex;
            justify-content: space-between;
            padding: 20px;
            background-color: white;
            max-width: 1200px;
            margin: 0 auto;
        }
        .checkout-details {
            width: 65%;
            padding: 20px;
            border-right: 1px solid #e0e0e0; /* Optional: add a border for separation */
        }
        .order-summary-container {
            width: 30%;
            display: flex;
            flex-direction: column;
            gap: 20px;
            padding: 20px; /* Added padding */
        }
        /* Payment Method and Order Summary Styles */
        .payment-method, .order-summary {
            border: 1px solid #e0e0e0;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        .payment-method h3, .order-summary h4 {
            margin-top: 0;
            font-size: 1.2rem;
            color: #333;
        }
        .payment-method ul, .delivery-address ul {
            list-style: none;
            padding: 0;
        }
        .payment-method li, .delivery-address li {
            margin: 10px 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0; /* Adjusted padding for uniformity */
        }
        .order-summary hr {
            border: 0;
            border-top: 1px solid #e0e0e0;
            margin: 15px 0;
        }
        .order-summary p {
            font-size: 0.9rem;
            margin: 5px 0;
            color: #555;
        }
        .total-amount {
            font-size: 1.2rem;
            font-weight: bold;
            color: #333;
        }
        .place-order-btn {
            display: block;
            width: 100%;
            background-color: green;
            color: white;
            border: none;
            padding: 12px;
            font-size: 1rem;
            border-radius: 8px;
            cursor: pointer;
            text-align: center;
            margin-top: 20px;
        }
        .place-order-btn:hover {
            background-color: #45a049;
        }
        /* Product Card Styles */
        .product-card {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 15px;
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            margin-bottom: 20px;
            background-color: #ffffff;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        .product-image img {
            width: 100%;
            max-width: 80px;
            border-radius: 8px;
        }
        .product-details {
            flex: 1;
        }
        .product-details h6 {
            margin: 0;
            font-size: 1rem;
            font-weight: bold;
        }
        .product-details p {
            margin: 4px 0;
        }
        /* Order Items and Total */
        .order-items-header {
            font-size: 1.2rem;
            font-weight: bold;
        }
        .total-items {
            font-weight: bold;
            margin-top: 10px;
        }
        /* Address and Payment Item Styles */
        .radio-btn {
            width: 16px; /* Smaller size */
            height: 16px;
            accent-color: #333; /* Optional color */
        }
        .small-radio {
    width: 15px;
    height: 15px;
    }
    .viewCouponsButton{
        align-items: end;
    }
    

    </style>
</head>

<body>
    <div class="checkout-container">
        <!-- Left Section (Checkout Details) -->
        <div class="checkout-details">
            <h2>CHECKOUT</h2>
            <br>
            <!-- Product Info (Ordered Items) -->
            <div class="checkout-header">
                <h3 class="order-items-header">Order Items</h3>
                <form action="/placeOrder" id="orderForm" method="post">

                    <input type="hidden" name="cartId" value="<%= cart._id %>" id="thecart" >
                    <input type="hidden" id="selectedPaymentMethods" name="paymentMethod" value="">
                    <input type="hidden" id="selectedAddressId" name="addressId" value="">
                    <input type="hidden" name="paymentId" id="razorpayId" value="">
                    <input type="hidden" name="coupenOffer" value="" id="coupenOffer">
                </form>
                <% cart.items.forEach((item) => { %>
                    <div class="product-card">
                        <!-- Product Image -->
                        <div class="product-image">
                            <img src="/newfile/<%= item.product.product_image[0] %>" alt="Product Image">
                        </div>
                        <!-- Product Details -->
                        <div class="product-details">
                            <h6><%= item.product.product_name %></h6>
                            <p>â‚¹<%= item.product.product_sale_price %></p>
                            <p>Quantity: <%= item.quantity %></p>
                            <p>Brand: <%= item.product.product_brand %></p>
                        </div>
                    </div>
                <% }); %>
                <p class="total-items">Total Items: <%= cart.items.length %></p>
            </div>

            <!-- Delivery Address -->
            <div class="delivery-address">
                <h3>Delivery Address</h3>
                <br>
                <div>
                   <a class="btn btn-primary" href="/load_checkout_addAddress" > add address</a>
                </div>
                <ul>
                <% userAddress.forEach((item) => { %>
                    <li>
                        <div>
                            <p><strong>House Name:</strong> <%= item.houseName %></p>
                            <p><strong>Pin Code:</strong> <%= item.pinCode %></p>
                            <p><strong>PO:</strong> <%= item.po %></p>
                            <p><strong>Location:</strong> <%= item.location %></p>
                            <p><strong>State:</strong> <%= item.state %></p>
                           <button type="button" onclick="window.location.href='/edit_editAddress/<%=item._id%>' "> Edit Address</button>
                        </div>
                        
                        <input class="radio-btn" type="radio" name="addressId" onclick="addressSelect('<%= item.id %>')" value="<%= item._id %>"  id="addressId">
                    </li>
                <% }); %>
                </ul>
            </div>
        </div>

        <!-- Right Section (Payment and Order Summary) -->
        <div class="order-summary-container">
            <!-- Payment Method -->
            <div class="payment-method"  id="selectedPaymentMethods">
                <h3>Payment Method</h3>
                <ul>
                    <li>
                        <span>Cash On Delivery</span>
                        <input <% if(onlyItems.totalSalesPrice>1000) {%>disabled<%}%>  type="radio" class="radio-btn" name="payment" value="COD" id="cod" onclick="payment(value)" >
                    
                        <span>RazorPay</span>
                        <input type="radio" class="radio-btn" name="payment" value="RazorPay" id="razorpay" onclick="payment(value)" >

                        <span>Wallet</span>
                        <input <% if(wallet.balance<cart.totalSalesPrice) {%>disabled<%}%>  type="radio" class="radio-btn" name="payment" value="wallet" id="wallet" onclick="payment(value)" >



                    </li>
                </ul>
            </div>

            <div class="coupen_session"> 
                <input type="text" id="coupen" placeholder="Enter the coupen">
                <button type="button" onclick="applyCoupen()">Apply Coupen </button>
                <button type="button" id="viewCouponsButton" data-bs-toggle="modal" data-bs-target="#couponModal">View Coupons</button>


                <p id="couponMessage"></p>
            </div>

            <!-- Bootstrap Modal -->
<div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="couponModalLabel">Available Coupons</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="couponDetails">
                <!-- Coupon details will be inserted here -->
                <table>
                    <thead>
                        <tr>
                            <th>COUPON CODE</th>
                            <th>DISCOUNT</th>
                            <th>MINIMUM AMOUNT</th>
                        </tr>                            
                    </thead> 
                    <tbody>
                        <% coupen.forEach((cpn) => { %>
                            <tr>
                                <td><%= cpn.code %></td>
                                <td><%= cpn.discountPercentage %> %</td>
                                <td><%= cpn.minimumPurchaseAmount %></td>
                            </tr>
                        <% }) %>
                    </tbody>   
                </table>
                
                
               
            </div>
        </div>
    </div>
</div>
            
            <!-- Order Summary -->
            <div class="order-summary">
                <h4>Order Summary</h4>
                <% if (cart && cart.totalRegularPrice > 0) { %>
                    <p>Total Price: â‚¹<%= cart.totalRegularPrice %></p>
                <% } else { %>
                    <p>No items in the cart.</p>
                <% } %>
            </div>
            


                <hr>
                <h4>Order Summary</h4>
                <% if (cart && cart.totalSalesPrice > 0) { %>
                    <p id="total-amount">Total Price: â‚¹<%= cart.totalSalesPrice %>  </p>
                <% } else if (cart && cart.items.length > 0) { %>
                    <% cart.items.forEach((item) => { %>
                        <p><%= item.product.product_name %> - â‚¹<%= item.product.product_sale_price * item.quantity %></p>
                    <% }); %>
                <% } else { %>
                    <p>No items in the cart.</p>
                <% } %>
                                <input  type="hidden" value="<%= onlyItems.totalSalesPrice %>" id="totalOffer" >
                <button type="submit" onclick="checkInputs(event)" class="btn btn-primary btn-lg w-100" id="placeOrder" >Place Order</button>
           
            </div>
        </div>
    </div>
</body>
<!-- 
<script>
    async function selectCoupen(coupenId,cartId){

        // console.log('entered in the selectCoupen function',coupenId,cartId)

        try {
             const response = fetch('select_Coupen',{
        method:'post',
        headers:{
          'Content-Type':'application/json'
        },
        body:JSON.stringify({coupenId,cartId})

      });
      const data = await response.json();
            console.log(data);
        } catch (error) {
            console.log(error.message)
            return 
            
        }

    }
</script> -->

<script>


/////  ADD COUPEN ////

async function applyCoupen() {
    const applyButton = document.querySelector('.coupen_session button');
    const coupon = document.getElementById('coupen').value;
    const couponField = document.getElementById('coupen')
    console.log('cc',couponField)


    try {
        const response = await fetch('/applyCoupen', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ couponCode: coupon })
        });

        const data = await response.json();

        if (response.ok) {
            const discountAmount = data.amount
            const finalPrice=data.finalPrice
            const couponCode = data.couponCode
            console.log('the response couponCode is ',couponCode)
            document.getElementById('total-amount').innerText = `Total Amount: â‚¹${finalPrice}`;
            document.getElementById('couponMessage').innerText = `Coupon applied! You saved ${discountAmount}.`;
            document.getElementById('coupenOffer').value = data.amount
            applyButton.innerText='remove'
            // document.getElementById('coupen').value = discountAmount
            applyButton.onclick = () => removeCoupen(discountAmount,couponCode);
        } else {
            document.getElementById('couponMessage').innerText = data.message;
        }
    } catch (error) {
        console.log('error found')
        console.log(error.message);
        // window.location.href = '/errorPage';
    }
}
///   REMOVE COUPEN ///

async function removeCoupen(price,couponCode){

    console.log('the couponCode is ',couponCode)
    const applyButton = document.querySelector('.coupen_session button');
    const couponField = document.getElementById('coupen');

    couponField.value = '';
    applyButton.innerText = 'Apply Coupon';
    applyButton.onclick = applyCoupen;

    try {
    const response = await fetch('/returnAmount', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ price: price, couponCode: couponCode })
    });

    if (response.ok) {
        const data = await response.json();
        const returnAmount = data.returnAmount;
        console.log(returnAmount);
        document.getElementById('totalOffer').innerText = `Total Amount: â‚¹${returnAmount}`;
        document.getElementById('total-amount').innerText = `Total Amount: â‚¹${returnAmount}`
        document.getElementById('couponMessage').innerText = '';

    } else {
        document.getElementById('couponMessage').innerText = '';
    }
} catch (error) {
    console.log(error.message);
}
}

   
///   RAZORPAY ///

function checkInputs(event) {
event.preventDefault();
event.stopPropagation();
addressId = document.getElementById('selectedAddressId').value;
paymentMethod = document.getElementById('selectedPaymentMethods').value;
let form = document.getElementById('orderForm')
if(!addressId){
    swal.fire('info', 'please select an Address', 'info');
} else if(!paymentMethod) {
    console.log('select a payment ')
    swal.fire('info', 'please choose A payment method', 'info');
} else if(paymentMethod =='RazorPay') {
    console.log('razorpay portal')
    razor(form)
} else if(paymentMethod == 'wallet'){
    console.log('wallet is on')
    wallet(form)

}else {
    
 
form.submit()
    
    
}
}

///

async function wallet(form){
    const totalAmount = document.getElementById('totalOffer').value
    const response = await fetch('/walletPay',{
        method:'post',
        headers:{
            'content-Type':'application/json'
        },
        body:JSON.stringify({totalAmount})
    })

const data = await response.json();

    if(data.success){
        console.log('the route is working')
        form.submit()
    }

}





////


function addressSelect(id){
console.log(id)

    document.getElementById('selectedAddressId').value=id

}
function payment(id){
    console.log(id)
    document.getElementById('selectedPaymentMethods').value=id
}


async function razor(form){
    try {
         console.log('check 1')
        const amount = document.getElementById('totalOffer').value
        console.log('check 2',amount)
        const response = await fetch('/razorPay', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ amount, currency: 'INR' }),
      });

      const data = await response.json();

      if (!data.success) {
        alert("Unable to create order");
        return;
      }

      const options = {
        key: "<%= process.env.RAZORPAY_KEY_ID %>",
        amount: data.order.amount,
        currency: data.order.currency,
        order_id: data.order.id,
        handler: async function (response) {
          const verificationResponse = await fetch('/verify_razorPay', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(response),
          });

          const verificationData = await verificationResponse.json();

          if (verificationData.success) {
            console.log('razorpay finally success')
            
            form.submit()
          } else {
            alert("Payment verification failed");
          }
        },
      };

      const rzp = new Razorpay(options);
      rzp.on('payment.failed', async function (paymentDetails) {

        let selectAddressId= document.getElementById('addressId').value
                try {
                    const paymentId = paymentDetails.error.metadata.payment_id;
                    const orderId = '<%= cart._id %>'
                    console.log('Payment ID:', paymentId);
                    console.log('selected address:',selectAddressId);
                    const response = await fetch('/failedPayment/<%= cart.user %>', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ paymentId, selectAddressId, orderId})
                    });
            
                    if (response.ok) {
                        const responseData = await response.json();
                        console.log('Payment failed response:', responseData);
                        window.location.href =`/retryPage/${responseData.paymentId?._id}`
                        
                    } else {
                        console.error('Server error during payment failure handling.');
                    }
                } catch (error) {
                    console.error('Error in payment.failed handler:', error);
                    alert('Something went wrong. Please try again.');
                }
            });
      rzp.open();

    } catch (error) {
        console.log(error.message)
        res.redirect('/errorPage')
        
    }
}


    const placeOrderBtn = document.getElementById('placeOrderBtn');
    const codRadio = document.getElementById('cod');
    const razorpayRadio = document.getElementById('razorpa');
    
    document.getElementById('razorpay').onlclick = async function () {
    }
      
  </script>

<%- include("../layouts/user_footer.ejs") %>
